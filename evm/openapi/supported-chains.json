{
  "openapi": "3.0.3",
  "info": {
    "title": "Sim API - Supported Chains Endpoint",
    "description": "This API provides information about supported chains for various EVM endpoints.",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://api.sim.dune.com"
    }
  ],
  "paths": {
    "/v1/evm/supported-chains/{uri}": {
      "get": {
        "tags": [
          "supported-chains"
        ],
        "summary": "Get a list of supported chains for EVM endpoints",
        "description": "This endpoint returns a list of chains that are supported by the EVM endpoints. This is a unified endpoint that replaces the individual chains endpoints for each service.",
        "operationId": "getEvmSupportedChains",
        "parameters": [
          {
            "name": "X-Sim-Api-Key",
            "in": "header",
            "description": "Used for authenticating requests. Provide an API key with a purpose of `Sim API`. See [Authentication](/#authentication).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uri",
            "in": "path",
            "description": "The endpoint to get supported chains for (e.g., 'balances', 'activity', 'token-info')",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChainsResponse"
                },
                "example": {
                  "chains": [
                    {
                      "id": 42161,
                      "name": "arbitrum",
                      "supported_assets": [
                        "native",
                        "erc20"
                      ],
                      "tags": [
                        "default",
                        "mainnet"
                      ]
                    },
                    {
                      "id": 1,
                      "name": "ethereum",
                      "supported_assets": [
                        "native",
                        "erc20"
                      ],
                      "tags": [
                        "default",
                        "mainnet"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request could not be understood by the server due to malformed data"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error - A generic error occurred on the server"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChainEntry": {
        "type": "object",
        "required": [
          "name",
          "id",
          "tags"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The chain ID"
          },
          "name": {
            "type": "string",
            "description": "The name of the chain"
          },
          "supported_assets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Types of assets supported on this chain (e.g., 'native', 'erc20', 'erc721')"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with this chain (e.g., 'default', 'mainnet', 'testnet')"
          },
          "rpc_url": {
            "type": "string",
            "description": "The RPC URL for this chain"
          },
          "explorer_url": {
            "type": "string",
            "description": "The block explorer URL for this chain"
          },
          "logo": {
            "type": "string",
            "description": "URL to the chain's logo"
          }
        }
      },
      "ChainsResponse": {
        "type": "object",
        "required": [
          "chains"
        ],
        "properties": {
          "chains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChainEntry"
            },
            "description": "Array of supported chains"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "supported-chains",
      "description": "Supported Chains API"
    }
  ]
}
